# generates an opening database from Playtak.com games database

name: create database release

on:
#  schedule:
#    # * is a special character in YAML so you have to quote this string
#    - cron:  '30 2 * * 2'
  push:
    # branches: [main]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        cache: pipenv
    - name: Install pipenv
      run: pip install pipenv
    - name: pipenv install
      run: pipenv install
    - name: download playtak games database
      run: |
        mkdir data
        wget -O data/games_anon.db https://www.playtak.com/games_anon.db
    - name: generate database
      run: |
        pipenv run python TAKexplorer.py extract -i data/games_anon.db -o data/openings_s6_1200.db -p 12 -n 100000 -r 1200
        pipenv run python util/dump_db.py
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release_06_${{github.ref}}_${{ github.run_id }}
        release_name: Release ${{ github.ref }} ${{ github.run_id }}
        draft: false
        prerelease: false
    - name: Upload sqlite3 db
      id: upload-sqlite3-db
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: data/openings_s6_1200.db
        asset_name: openings_s6_1200.db
        asset_content_type: text/plain
    - name: Upload CSV dump
      id: upload-csv-dump
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: db_dump
        asset_name: db_dump
        asset_content_type: text/plain
